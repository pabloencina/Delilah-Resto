{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Delilah Resto",
    "license": {
      "name": "MIT"
    }
  },
  "host": "delilah-resto.com",
  "basePath": "/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "checkin",
      "description": "Customer registration"
    },
    {
      "name": "login",
      "description": "Login for customer and administrator"
    },
    {
      "name": "products",
      "description": "Product magnamnet"
    },
    {
      "name": "customers",
      "description": "customer and its orders magnament"
    },
    {
      "name": "administrators",
      "description": "Administrator magnament"
    },
    {
      "name": "orders",
      "description": "Order magnament"
    }

  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "login",
        "tags": [
          "login"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Send only email and password. No Auth required.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checkin": {
      "post": {
        "summary": "Check in",
        "tags": [
          "checkin"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "customer type object. No Auth required.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The customer created.",
                        "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "summary": "A list of all the customers",
        "tags": [
          "customers"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "a  array of customers",
            "headers": {
              "x-next": {
                "type": "string",
                "description": "A link to the next page of responses"
              }
            },
            "schema": {
              "$ref": "#/definitions/customers"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "summary": "See my data",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "the id of the customer to be modified",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "customer type object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/customers/{customerId}/orders": {
      "get": {
        "summary": "Check my orders",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "the id of the customer to get the orders",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "a paged array of orders",
            "headers": {
              "x-next": {
                "type": "string",
                "description": "A link to the next page of responses"
              }
            },
            "schema": {
              "$ref": "#/definitions/orders"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create an order",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "the id of the customer to create the order",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Order type object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The order just created",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/customers/{customerId}/orders/{orderId}": {
      "get": {
        "summary": "View order status",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "the id of the customer to get the order",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "the id of the order to be requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The order requested.",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Cancel the order for the customer.",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "the id of the customer to get the orders",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "the id of the order to be cancelled",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Order type object. Only be read the field orderState. To cancell send orderState='CANCELLED'",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The updated order with the new status",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/administrators": {
      "get": {
        "summary": "List of all administrators",
        "tags": [
          "administrators"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "a paged array of administrators",
            "headers": {
              "x-next": {
                "type": "string",
                "description": "A link to the next page of responses"
              }
            },
            "schema": {
              "$ref": "#/definitions/administrators"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a adminstrator",
        "tags": [
          "administrators"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Administrator type object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/administrator"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The Administrator created with Id",
            "schema": {
              "$ref": "#/definitions/administrator"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/administrators/{administratorId}": {
      "get": {
        "summary": "See my data",
        "tags": [
          "administrators"
        ],
        "parameters": [
          {
            "name": "administratorId",
            "in": "path",
            "description": "the id of the administrator to be modified",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested administrator",
            "schema": {
              "$ref": "#/definitions/administrator"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "See order list",
        "tags": [
          "orders"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "a array of orders",
            "headers": {
              "x-next": {
                "type": "string",
                "description": "A link to the next page of responses"
              }
            },
            "schema": {
              "$ref": "#/definitions/orders"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "put": {
        "summary": "Change order State ('CONFIRMED', 'PREPARED', 'SENT', 'DELIVERED', 'CANCELLED')",
        "tags": [
          "orders"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "the id of the order to be modified",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Order type object. Send onlythe field orderState.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The order object with the current status",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "List of all products",
        "tags": [
          "products"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "a paged array of product",
            "headers": {
              "x-next": {
                "type": "string",
                "description": "A link to the next page of responses"
              }
            },
            "schema": {
              "$ref": "#/definitions/products"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a product",
        "tags": [
          "products"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "product type object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created product with Id",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "put": {
        "summary": "Modify product",
        "tags": [
          "products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "the id of the product to be modified",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "product type object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A message with the confirmation of update"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "the id of the product to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "product was successfully removed"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "properties": {
        "userId": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "admin": {
          "type": "boolean"
        }
      }
    },
    "users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/user"
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "customer": {
      "properties": {
        "customerId": {
          "type": "number"
        },
        "address": {
          "type": "string"
        },
        "user": {
          "type": "object",
          "$ref": "#/definitions/user"
        }
      }
    },
    "customers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/customer"
      }
    },
    "administrator": {
      "properties": {
        "administratorId": {
          "type": "number"
        },
        "userId": {
          "type": "number"
        },
        "identificationNumber": {
          "type": "string"
        }
      }
    },
    "administrators": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/administrator"
      }
    },
    "order": {
      "properties": {
        "orderId": {
          "type": "number"
        },
        "orderNumber": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "totalPrice": {
          "type": "number"
        },
        "orderDetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/order-detail"
          }
        },
        "orderCreateDateTime": {
          "type": "string"
        },
        "orderConfirmedDateTime": {
          "type": "string"
        },
        "orderPreparedDateTime": {
          "type": "string"
        },
        "orderSentDateTime": {
          "type": "string"
        },
        "orderDeliveredDateTime": {
          "type": "string"
        },
        "orderCancelledDateTime": {
          "type": "string"
        },
        "customerId": {
          "type": "number"
        },
        "paymentMethod": {
          "type": "string",
          "enum":["CASH", "CARD"]
        },
        "orderState": {
          "type": "string",
          "enum":["NEW","CONFIRMED","PREPARED","SENT","DELIVERED", "CANCELLED"]
        }
      }
    },
    "orders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/order"
      }
    },
    "order-detail": {
      "properties": {
        "orderDetailId": {
          "type": "number"
        },
        "productPrice": {
          "type": "number"
        },
        "productQuantify": {
          "type": "number"
        },
        "productId": {
          "type": "number"
        }
      }
    },
    "order-details": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/order-detail"
      }
    },
    "product": {
      "properties": {
        "productId": {
          "type": "number"
        },
        "productNumber": {
          "type": "number"
        },
        "productName": {
          "type": "string"
        },
        "productPrice": {
          "type": "number"
        },
        "productPhoto": {
          "type": "string"
        }
      }
    },
    "products": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/product"
      }
    }
  }
}